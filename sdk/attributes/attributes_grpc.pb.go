// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: attributes/attributes.proto

package attributes

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AttributesService_GetAttribute_FullMethodName     = "/attributes.AttributesService/GetAttribute"
	AttributesService_ListAttributes_FullMethodName   = "/attributes.AttributesService/ListAttributes"
	AttributesService_GetDefinition_FullMethodName    = "/attributes.AttributesService/GetDefinition"
	AttributesService_ListDefinitions_FullMethodName  = "/attributes.AttributesService/ListDefinitions"
	AttributesService_CreateDefinition_FullMethodName = "/attributes.AttributesService/CreateDefinition"
	AttributesService_UpdateDefinition_FullMethodName = "/attributes.AttributesService/UpdateDefinition"
	AttributesService_DeleteDefinition_FullMethodName = "/attributes.AttributesService/DeleteDefinition"
	AttributesService_GetValue_FullMethodName         = "/attributes.AttributesService/GetValue"
	AttributesService_ListValues_FullMethodName       = "/attributes.AttributesService/ListValues"
	AttributesService_CreateValue_FullMethodName      = "/attributes.AttributesService/CreateValue"
	AttributesService_UpdateValue_FullMethodName      = "/attributes.AttributesService/UpdateValue"
	AttributesService_DeleteValue_FullMethodName      = "/attributes.AttributesService/DeleteValue"
)

// AttributesServiceClient is the client API for AttributesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AttributesServiceClient interface {
	// * Attribute (Definition & Value(s)) read-only convenience functions *
	GetAttribute(ctx context.Context, in *GetAttributeRequest, opts ...grpc.CallOption) (*GetAttributeResponse, error)
	ListAttributes(ctx context.Context, in *ListAttributesRequest, opts ...grpc.CallOption) (*ListAttributesResponse, error)
	// * Attribute Definition *
	GetDefinition(ctx context.Context, in *GetDefinitionRequest, opts ...grpc.CallOption) (*GetDefinitionResponse, error)
	ListDefinitions(ctx context.Context, in *ListDefinitionsRequest, opts ...grpc.CallOption) (*ListDefinitionsResponse, error)
	CreateDefinition(ctx context.Context, in *CreateDefinitionRequest, opts ...grpc.CallOption) (*CreateDefinitionResponse, error)
	UpdateDefinition(ctx context.Context, in *UpdateDefinitionRequest, opts ...grpc.CallOption) (*UpdateDefinitionResponse, error)
	DeleteDefinition(ctx context.Context, in *DeleteDefinitionRequest, opts ...grpc.CallOption) (*DeleteDefinitionResponse, error)
	GetValue(ctx context.Context, in *GetValueRequest, opts ...grpc.CallOption) (*GetValueResponse, error)
	ListValues(ctx context.Context, in *ListValuesRequest, opts ...grpc.CallOption) (*ListValuesResponse, error)
	CreateValue(ctx context.Context, in *CreateValueRequest, opts ...grpc.CallOption) (*CreateValueResponse, error)
	UpdateValue(ctx context.Context, in *UpdateValueRequest, opts ...grpc.CallOption) (*UpdateValueResponse, error)
	DeleteValue(ctx context.Context, in *DeleteValueRequest, opts ...grpc.CallOption) (*DeleteValueResponse, error)
}

type attributesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAttributesServiceClient(cc grpc.ClientConnInterface) AttributesServiceClient {
	return &attributesServiceClient{cc}
}

func (c *attributesServiceClient) GetAttribute(ctx context.Context, in *GetAttributeRequest, opts ...grpc.CallOption) (*GetAttributeResponse, error) {
	out := new(GetAttributeResponse)
	err := c.cc.Invoke(ctx, AttributesService_GetAttribute_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) ListAttributes(ctx context.Context, in *ListAttributesRequest, opts ...grpc.CallOption) (*ListAttributesResponse, error) {
	out := new(ListAttributesResponse)
	err := c.cc.Invoke(ctx, AttributesService_ListAttributes_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) GetDefinition(ctx context.Context, in *GetDefinitionRequest, opts ...grpc.CallOption) (*GetDefinitionResponse, error) {
	out := new(GetDefinitionResponse)
	err := c.cc.Invoke(ctx, AttributesService_GetDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) ListDefinitions(ctx context.Context, in *ListDefinitionsRequest, opts ...grpc.CallOption) (*ListDefinitionsResponse, error) {
	out := new(ListDefinitionsResponse)
	err := c.cc.Invoke(ctx, AttributesService_ListDefinitions_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) CreateDefinition(ctx context.Context, in *CreateDefinitionRequest, opts ...grpc.CallOption) (*CreateDefinitionResponse, error) {
	out := new(CreateDefinitionResponse)
	err := c.cc.Invoke(ctx, AttributesService_CreateDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) UpdateDefinition(ctx context.Context, in *UpdateDefinitionRequest, opts ...grpc.CallOption) (*UpdateDefinitionResponse, error) {
	out := new(UpdateDefinitionResponse)
	err := c.cc.Invoke(ctx, AttributesService_UpdateDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) DeleteDefinition(ctx context.Context, in *DeleteDefinitionRequest, opts ...grpc.CallOption) (*DeleteDefinitionResponse, error) {
	out := new(DeleteDefinitionResponse)
	err := c.cc.Invoke(ctx, AttributesService_DeleteDefinition_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) GetValue(ctx context.Context, in *GetValueRequest, opts ...grpc.CallOption) (*GetValueResponse, error) {
	out := new(GetValueResponse)
	err := c.cc.Invoke(ctx, AttributesService_GetValue_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) ListValues(ctx context.Context, in *ListValuesRequest, opts ...grpc.CallOption) (*ListValuesResponse, error) {
	out := new(ListValuesResponse)
	err := c.cc.Invoke(ctx, AttributesService_ListValues_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) CreateValue(ctx context.Context, in *CreateValueRequest, opts ...grpc.CallOption) (*CreateValueResponse, error) {
	out := new(CreateValueResponse)
	err := c.cc.Invoke(ctx, AttributesService_CreateValue_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) UpdateValue(ctx context.Context, in *UpdateValueRequest, opts ...grpc.CallOption) (*UpdateValueResponse, error) {
	out := new(UpdateValueResponse)
	err := c.cc.Invoke(ctx, AttributesService_UpdateValue_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributesServiceClient) DeleteValue(ctx context.Context, in *DeleteValueRequest, opts ...grpc.CallOption) (*DeleteValueResponse, error) {
	out := new(DeleteValueResponse)
	err := c.cc.Invoke(ctx, AttributesService_DeleteValue_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttributesServiceServer is the server API for AttributesService service.
// All implementations must embed UnimplementedAttributesServiceServer
// for forward compatibility
type AttributesServiceServer interface {
	// * Attribute (Definition & Value(s)) read-only convenience functions *
	GetAttribute(context.Context, *GetAttributeRequest) (*GetAttributeResponse, error)
	ListAttributes(context.Context, *ListAttributesRequest) (*ListAttributesResponse, error)
	// * Attribute Definition *
	GetDefinition(context.Context, *GetDefinitionRequest) (*GetDefinitionResponse, error)
	ListDefinitions(context.Context, *ListDefinitionsRequest) (*ListDefinitionsResponse, error)
	CreateDefinition(context.Context, *CreateDefinitionRequest) (*CreateDefinitionResponse, error)
	UpdateDefinition(context.Context, *UpdateDefinitionRequest) (*UpdateDefinitionResponse, error)
	DeleteDefinition(context.Context, *DeleteDefinitionRequest) (*DeleteDefinitionResponse, error)
	GetValue(context.Context, *GetValueRequest) (*GetValueResponse, error)
	ListValues(context.Context, *ListValuesRequest) (*ListValuesResponse, error)
	CreateValue(context.Context, *CreateValueRequest) (*CreateValueResponse, error)
	UpdateValue(context.Context, *UpdateValueRequest) (*UpdateValueResponse, error)
	DeleteValue(context.Context, *DeleteValueRequest) (*DeleteValueResponse, error)
	mustEmbedUnimplementedAttributesServiceServer()
}

// UnimplementedAttributesServiceServer must be embedded to have forward compatible implementations.
type UnimplementedAttributesServiceServer struct {
}

func (UnimplementedAttributesServiceServer) GetAttribute(context.Context, *GetAttributeRequest) (*GetAttributeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAttribute not implemented")
}
func (UnimplementedAttributesServiceServer) ListAttributes(context.Context, *ListAttributesRequest) (*ListAttributesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAttributes not implemented")
}
func (UnimplementedAttributesServiceServer) GetDefinition(context.Context, *GetDefinitionRequest) (*GetDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefinition not implemented")
}
func (UnimplementedAttributesServiceServer) ListDefinitions(context.Context, *ListDefinitionsRequest) (*ListDefinitionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDefinitions not implemented")
}
func (UnimplementedAttributesServiceServer) CreateDefinition(context.Context, *CreateDefinitionRequest) (*CreateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDefinition not implemented")
}
func (UnimplementedAttributesServiceServer) UpdateDefinition(context.Context, *UpdateDefinitionRequest) (*UpdateDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDefinition not implemented")
}
func (UnimplementedAttributesServiceServer) DeleteDefinition(context.Context, *DeleteDefinitionRequest) (*DeleteDefinitionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDefinition not implemented")
}
func (UnimplementedAttributesServiceServer) GetValue(context.Context, *GetValueRequest) (*GetValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetValue not implemented")
}
func (UnimplementedAttributesServiceServer) ListValues(context.Context, *ListValuesRequest) (*ListValuesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListValues not implemented")
}
func (UnimplementedAttributesServiceServer) CreateValue(context.Context, *CreateValueRequest) (*CreateValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateValue not implemented")
}
func (UnimplementedAttributesServiceServer) UpdateValue(context.Context, *UpdateValueRequest) (*UpdateValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateValue not implemented")
}
func (UnimplementedAttributesServiceServer) DeleteValue(context.Context, *DeleteValueRequest) (*DeleteValueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteValue not implemented")
}
func (UnimplementedAttributesServiceServer) mustEmbedUnimplementedAttributesServiceServer() {}

// UnsafeAttributesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AttributesServiceServer will
// result in compilation errors.
type UnsafeAttributesServiceServer interface {
	mustEmbedUnimplementedAttributesServiceServer()
}

func RegisterAttributesServiceServer(s grpc.ServiceRegistrar, srv AttributesServiceServer) {
	s.RegisterService(&AttributesService_ServiceDesc, srv)
}

func _AttributesService_GetAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAttributeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).GetAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_GetAttribute_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).GetAttribute(ctx, req.(*GetAttributeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_ListAttributes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAttributesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).ListAttributes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_ListAttributes_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).ListAttributes(ctx, req.(*ListAttributesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_GetDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).GetDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_GetDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).GetDefinition(ctx, req.(*GetDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_ListDefinitions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDefinitionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).ListDefinitions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_ListDefinitions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).ListDefinitions(ctx, req.(*ListDefinitionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_CreateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).CreateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_CreateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).CreateDefinition(ctx, req.(*CreateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_UpdateDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).UpdateDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_UpdateDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).UpdateDefinition(ctx, req.(*UpdateDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_DeleteDefinition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDefinitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).DeleteDefinition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_DeleteDefinition_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).DeleteDefinition(ctx, req.(*DeleteDefinitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_GetValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).GetValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_GetValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).GetValue(ctx, req.(*GetValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_ListValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).ListValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_ListValues_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).ListValues(ctx, req.(*ListValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_CreateValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).CreateValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_CreateValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).CreateValue(ctx, req.(*CreateValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_UpdateValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).UpdateValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_UpdateValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).UpdateValue(ctx, req.(*UpdateValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttributesService_DeleteValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttributesServiceServer).DeleteValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AttributesService_DeleteValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttributesServiceServer).DeleteValue(ctx, req.(*DeleteValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AttributesService_ServiceDesc is the grpc.ServiceDesc for AttributesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AttributesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "attributes.AttributesService",
	HandlerType: (*AttributesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAttribute",
			Handler:    _AttributesService_GetAttribute_Handler,
		},
		{
			MethodName: "ListAttributes",
			Handler:    _AttributesService_ListAttributes_Handler,
		},
		{
			MethodName: "GetDefinition",
			Handler:    _AttributesService_GetDefinition_Handler,
		},
		{
			MethodName: "ListDefinitions",
			Handler:    _AttributesService_ListDefinitions_Handler,
		},
		{
			MethodName: "CreateDefinition",
			Handler:    _AttributesService_CreateDefinition_Handler,
		},
		{
			MethodName: "UpdateDefinition",
			Handler:    _AttributesService_UpdateDefinition_Handler,
		},
		{
			MethodName: "DeleteDefinition",
			Handler:    _AttributesService_DeleteDefinition_Handler,
		},
		{
			MethodName: "GetValue",
			Handler:    _AttributesService_GetValue_Handler,
		},
		{
			MethodName: "ListValues",
			Handler:    _AttributesService_ListValues_Handler,
		},
		{
			MethodName: "CreateValue",
			Handler:    _AttributesService_CreateValue_Handler,
		},
		{
			MethodName: "UpdateValue",
			Handler:    _AttributesService_UpdateValue_Handler,
		},
		{
			MethodName: "DeleteValue",
			Handler:    _AttributesService_DeleteValue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "attributes/attributes.proto",
}
